name: generate-localized-scripts

on:
  push:
    paths:
      - "**/utilkit.src.*"
  workflow_dispatch:

jobs:
  generate-localized-scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for accurate file change detection on push
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f scripts/translator/requirements.txt ]; then pip install -r scripts/translator/requirements.txt; fi

      - name: Get changed source files
        id: changed-files
        if: github.event_name == 'push'
        uses: tj-actions/changed-files@v46
        with:
          files: "**/utilkit.src.*"

      - name: Run Localization Engine
        run: python scripts/translator/localization_engine.py

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          
          # Check if there are any changes to commit
          if ! git diff-index --quiet HEAD; then
            COMMIT_MSG_TITLE="chore: Auto-generate and translate localized scripts"
            COMMIT_MSG_BODY=""

            if [[ "${{ github.event_name }}" == "push" && "${{ steps.changed-files.outputs.any_changed }}" == "true" ]]; then
              COMMIT_MSG_BODY="Triggered by changes in the following source file(s):\n"
              # Get commit info for each changed file
              for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                COMMIT_HASH=$(git log -1 --pretty=format:%h -- "$file")
                COMMIT_DATE=$(git log -1 --pretty=format:%cI -- "$file")
                COMMIT_MSG_BODY="${COMMIT_MSG_BODY}\n- ${COMMIT_HASH} | ${COMMIT_DATE} | ${file}"
              done
            fi
            
            # Commit with a multi-line message
            git commit -m "$COMMIT_MSG_TITLE" -m "$COMMIT_MSG_BODY"
            git push
          else
            echo "No changes to commit."
          fi
